// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NicheFilms.API.Data;

#nullable disable

namespace NicheFilms.API.Migrations.NicheFilmsDb
{
    [DbContext(typeof(NicheFilmsDbContext))]
    partial class NicheFilmsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NicheFilms.API.Models.MoviesUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<bool?>("AmazonPrime")
                        .HasColumnType("bit")
                        .HasColumnName("Amazon Prime");

                    b.Property<bool?>("AppleTv")
                        .HasColumnType("bit")
                        .HasColumnName("Apple TV+");

                    b.Property<string>("BinnedAge")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("binned_age");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("city");

                    b.Property<bool?>("Disney")
                        .HasColumnType("bit")
                        .HasColumnName("Disney+");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<bool?>("Hulu")
                        .HasColumnType("bit");

                    b.Property<bool?>("Max")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<bool?>("Netflix")
                        .HasColumnType("bit");

                    b.Property<bool?>("Paramount")
                        .HasColumnType("bit")
                        .HasColumnName("Paramount+");

                    b.Property<bool?>("Peacock")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("state")
                        .IsFixedLength();

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("zip")
                        .IsFixedLength();

                    b.HasKey("UserId")
                        .HasName("PK__movies_u__B9BE370FEEC98B61");

                    b.ToTable("movies_users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
